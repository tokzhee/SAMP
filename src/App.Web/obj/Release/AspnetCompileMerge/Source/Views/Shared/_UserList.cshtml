@using App.Core.BusinessLogic
@using App.DataModels.Models
@model List<App.Web.Models.UserModel>

@{
    var subMenuList = (from subMenu in CacheData.Submenus
                       join roleMenu in (List<rolemenu>)Session["RoleMenu"] on subMenu.id equals roleMenu.menu_sub_id
                       where subMenu.active_flag.Equals(true)
                       select new
                       {
                           id = subMenu.id,
                           display_name = subMenu.display_name,
                           access_name = subMenu.access_name,
                           main_menu_id = subMenu.main_menu_id,
                           url = subMenu.url,
                           active_flag = subMenu.active_flag,
                           arrangement_order = subMenu.arrangement_order,
                           display_flag = subMenu.display_flag
                       }).ToList();
}

<table id="order-listing" class="table table-striped table-hover table-responsive table-borderless">
    <thead>
        <tr>
            <th><strong>#</strong></th>
            <th><strong>Fullname</strong></th>
            <th><strong>User Type</strong></th>
            <th><strong>Authentication Type</strong></th>
            <th><strong>Branch User?</strong></th>
            <th><strong>Status</strong></th>
            <th><strong>Created on</strong></th>
            <th><strong>By</strong></th>
            <th><strong>Approved on</strong></th>
            <th><strong>By</strong></th>
            <th><strong>Last Modified on</strong></th>
            <th><strong>By</strong></th>
            @if (subMenuList.Any(c => c.access_name.ToLower().Contains("edit existing user")) || subMenuList.Any(c => c.access_name.ToLower().Contains("view user profile")) || subMenuList.Any(c => c.access_name.ToLower().Contains("reset user login credentials")))
            {
                <th> &nbsp; </th>
            }
        </tr>
    </thead>
    <tbody>
        @{
            var sn = 1;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>@(sn++).</td>
                <td>
                    @if (string.IsNullOrEmpty(item.Passport))
                    {
                        <img src="@Url.Content("~/Assets/images/user-blank.png")" alt="image" />
                    }
                    else
                    {
                        <img src="@Url.Content(item.Passport)" alt="image" />
                    }
                    &nbsp;
                    @item.Fullname
                </td>
                <td>@item.PersonTypeName</td>
                <td>@item.AuthenticationTypeName</td>
                <td>
                    @if (!item.IsBranchUser)
                    {
                        <label class="badge badge-success">
                            No
                        </label>
                    }
                    else
                    {
                        <label class="badge badge-warning">
                            Yes
                        </label>
                    }
                </td>
                <td>
                    <label class="badge badge-primary">
                        @item.AccountStatusName
                    </label>
                </td>
                <td>@item.CreatedOn</td>
                <td>@item.CreatedBy</td>
                <td>@item.ApprovedOn</td>
                <td>@item.ApprovedBy</td>
                <td>@item.LastModifiedOn</td>
                <td>@item.LastModifiedBy</td>
                @if (subMenuList.Any(c => c.access_name.ToLower().Contains("edit existing user")) || subMenuList.Any(c => c.access_name.ToLower().Contains("view user profile")) || subMenuList.Any(c => c.access_name.ToLower().Contains("reset user login credentials")))
                {
                    <td>
                        <div class="btn-group-sm">
                            <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown">
                                <span class="caret">
                                    Options
                                </span>
                            </button>
                            <ul class="dropdown-menu" style="padding: 15px;">

                                @if (subMenuList.Any(c => c.access_name.ToLower().Contains("edit existing user")))
                                {
                                    <li class="text-center">
                                        <a href="@Url.Action("EditExistingUser", new { q = item.UrlQueryString })" title="Edit User">
                                            Edit User
                                        </a>
                                    </li>
                                }
                                @if (subMenuList.Any(c => c.access_name.ToLower().Contains("view user profile")))
                                {
                                    <li class="text-center">
                                        <a href="@Url.Action("ViewUserProfile", new { q= item.UrlQueryString})" title="View User Profile">
                                            View Profile
                                        </a>
                                    </li>
                                }
                                @if (subMenuList.Any(c => c.access_name.ToLower().Contains("reset user login credentials")))
                                {
                                    if (Convert.ToInt32(item.AuthenticationTypeId).Equals((int)UserAccountAuthenticationType.LocalAccountAuthentication))
                                    {
                                        <li class="text-center">
                                            <a href="@Url.Action("ResetUserLoginCredentials", new { q= item.UrlQueryString})" onclick='return confirm("You have chosen to reset the user password, do you want to proceed ?");' title="Reset User Password">
                                                Reset Password
                                            </a>
                                        </li>
                                    }
                                }

                            </ul>
                        </div>
                    </td>
                }
            </tr>
        }
    </tbody>

</table>
